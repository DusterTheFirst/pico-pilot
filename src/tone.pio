; ADAPTED FROM https://github.com/earlephilhower/arduino-pico/blob/c65c4bfb4e9df8786bebb7100e5e031df068c573/cores/rp2040/tone2.pio
; Tone2 for the Raspberry Pi Pico RP2040
;
; Copyright (c) 2021 Earle F. Philhower, III <earlephilhower@yahoo.com>
;
; This library is free software; you can redistribute it and/or
; modify it under the terms of the GNU Lesser General Public
; License as published by the Free Software Foundation; either
; version 2.1 of the License, or (at your option) any later version.
;
; This library is distributed in the hope that it will be useful,
; but WITHOUT ANY WARRANTY; without even the implied warranty of
; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
; Lesser General Public License for more details.
;
; You should have received a copy of the GNU Lesser General Public
; License along with this library; if not, write to the Free Software
; Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA

; Side-set pin 0 is used for Tone output

; OSR == Halfcycle count

.program tone
.side_set 1 opt

    pull                     ; TXFIFO -> OSR, or X -> OSR if no new period
    mov x, osr               ; OSR -> X

high:
    pull noblock             ; Potentially grab new HALFCYCLECOUNT, OTW copy from backup in X
    mov x, osr               ; OSR -> X
    mov y, osr      side 1   ; HALFCYCLECOUNT -> Y
highloop:
    jmp y-- highloop         ; while (y--) { /* noop delay */ }

low:
    mov y, osr      side 0   ; HALFCYCLECOUNT -> Y
lowloop:
    jmp y-- lowloop          ; while (y--) { /* noop delay */ }

    jmp high                 ; GOTO high

% c-sdk {
static inline void tone_program_init(PIO pio, uint sm, uint offset, uint pin) {
   pio_sm_config c = tone_program_get_default_config(offset);

   pio_gpio_init(pio, pin);

   pio_sm_set_consecutive_pindirs(pio, sm, pin, 1, true);

   sm_config_set_sideset_pins(&c, pin);

   pio_sm_init(pio, sm, offset, &c);
}
%}